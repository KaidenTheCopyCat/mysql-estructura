db.collection("restaurants").find({});
db.collection("restaurants").find({}, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 });
db.collection("restaurants").find({}, { _id: 0, restaurant_id: 1, name: 1, borough: 1, cuisine: 1 });
db.collection("restaurants").find({}, { _id: 0, restaurant_id: 1, name: 1, borough: 1, address.zipcode: 1 });
db.collection("restaurants").find({ borough: "Bronx" });
db.collection("restaurants").find({ borough: "Bronx" }).limit(5);
db.collection("restaurants").find({ borough: "Bronx" }).skip(5).limit(5);
db.collection("restaurants").find({ grades.score: { $gt: 90 } });
db.collection("restaurants").find({ grades.score: { $gt: 80, $lt: 100 } });
db.collection("restaurants").find({ address.coord.0: { $lt: -95.754168 } });
db.collection("restaurants").find({ cuisine: { $ne: "American" },grades.score: { $gt: 70 },address.coord.0: { $lt: -65.754168 }});
db.collection("restaurants").find({ cuisine: { $ne: "American" },grades.score: { $gt: 70 },address.coord.0: { $lt: -65.754168 }});
db.collection("restaurants").find({ cuisine: { $ne: "American" },grades.grade: "A", borough: { $ne: "Brooklyn" }}).sort({ cuisine: -1 });
db.collection("restaurants").find({ name: /^Wil/ }, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 });
db.collection("restaurants").find({ name: /ces$/ }, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 });
db.collection("restaurants").find({ name: /Reg/ }, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 });
db.collection("restaurants").find({ borough: "Bronx", cuisine: { $in: ["American", "Chinese"] }});
db.collection("restaurants").find({borough: {$in: ["Staten Island", "Queens", "Bronx", "Brooklyn"]}}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1});
db.collection("restaurants").find({borough: {$nin: ["Staten Island", "Queens", "Bronx", "Brooklyn"]}}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1});
db.collection("restaurants").find({grades.score: {$lte: 10}}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1});
db.collection("restaurants").find({$and: [{cuisine: "Seafood"}, {$or: [{cuisine: {$ne: "American"}}, {cuisine: {$ne: "Chinese"}}]}, {$or: [{name: /^Wil/}]}]}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1});
db.collection("restaurants").find({grades: {$elemMatch: {grade: "A", score: 11, date: ISODate("2014-08-11T00:00:00Z")}}}, {restaurant_id: 1, name: 1, grades: 1});
db.collection("restaurants").find({grades.1.grade: "A", grades.1.score: 9, grades.1.date: ISODate("2014-08-11T00:00:00Z")}, {restaurant_id: 1, name: 1, grades: 1});
db.collection("restaurants").find({address.coord.1: {$gt: 42, $lt: 52}}, {restaurant_id: 1, name: 1, address: 1, address.coord: 1});
db.collection("restaurants").find({}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1}).sort({name: 1});
db.collection("restaurants").find({}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1}).sort({name: -1});
db.collection("restaurants").find({}, {name: 1, borough: 1, cuisine: 1}).sort({cuisine: 1, borough: -1});
db.collection("restaurants").find({address: {$regex: ".*street.*", $options: "i"}});
db.collection("restaurants").find({address.coord: {$type: "double"}});
db.collection("restaurants").find({$expr: {$eq: [{$mod: ["$grades.score", 7]}, 0]}}, {restaurant_id: 1, name: 1, grades: 1});
db.collection("restaurants").find({name: {$regex: ".*mon.*", $options: "i"}}, {name: 1, borough: 1, address.coord: 1, cuisine: 1});
db.collection("restaurants").find({name: {$regex: "^Mad", $options: "i"}}, {name: 1, borough: 1, "address.coord": 1, cuisine: 1});